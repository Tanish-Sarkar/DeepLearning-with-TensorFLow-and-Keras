{"trial_id": "4", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 10, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "nodes_0", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation_1", "default": "relu", "conditions": [], "values": ["relu", "tanh", "sigmoid", "softmax"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "dropout_0", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "rmsprop", "nadam", "sgd", "adadelta"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "loss", "default": "binary_crossentropy", "conditions": [], "values": ["binary_crossentropy", "categorical_crossentropy", "sparse_categorical_crossentropy"], "ordered": false}}, {"class_name": "Int", "config": {"name": "nodes_1", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dropout_1", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "nodes_2", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dropout_2", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "nodes_3", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dropout_3", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "nodes_4", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dropout_4", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "nodes_5", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dropout_5", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "nodes_6", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dropout_6", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "nodes_7", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dropout_7", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "nodes_8", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dropout_8", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}, {"class_name": "Int", "config": {"name": "nodes_9", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "dropout_9", "default": 0.1, "conditions": [], "values": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], "ordered": true}}], "values": {"num_layers": 5, "nodes_0": 256, "activation_1": "softmax", "dropout_0": 0.4, "optimizer": "sgd", "loss": "sparse_categorical_crossentropy", "nodes_1": 256, "dropout_1": 0.9, "nodes_2": 32, "dropout_2": 0.9, "nodes_3": 64, "dropout_3": 0.1, "nodes_4": 256, "dropout_4": 0.6, "nodes_5": 192, "dropout_5": 0.4, "nodes_6": 192, "dropout_6": 0.3, "nodes_7": 64, "dropout_7": 0.7, "nodes_8": 96, "dropout_8": 0.6, "nodes_9": 128, "dropout_9": 0.1}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\Lenovo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\Lenovo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\Lenovo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"c:\\Users\\Lenovo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"c:\\Users\\Lenovo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\Lenovo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"c:\\Users\\Lenovo\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\keras\\src\\backend\\tensorflow\\nn.py\", line 734, in sparse_categorical_crossentropy\n    raise ValueError(\n    ...<3 lines>...\n    )\nValueError: Argument `output` must have rank (ndim) `target.ndim - 1`. Received: target.shape=(32, 10), output.shape=(32, 10)\n"}